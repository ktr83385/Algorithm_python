import sys
from collections import deque

def bfs(x, y):
    global visited, graph, m, n
    q = deque()
    q.append([x, y])
    visited[x][y] = True
    cnt = 1

    dx = [0, 0, 1, -1] #동서남북
    dy = [1, -1, 0, 0]

    while q:
        a, b = q.popleft()
        
        for i in range(4):
            nx = dx[i] + a
            ny = dy[i] + b
            
            if -1 < nx < m and -1 < ny < n and visited[nx][ny] == False and graph[nx][ny] == 0:
                cnt += 1
                visited[nx][ny] = True
                q.append([nx, ny])
    
    count_list.append(cnt)

m, n, k = map(int, sys.stdin.readline().split())

graph = [[0] * n for _ in range(m)]
visited = [[False] * n for _ in range(m)]
count_list = []
count = 0

for _ in range(k):
    x1, y1, x2, y2 = map(int, sys.stdin.readline().split())

    for i in range(m - y2, m - y1): 
        for j in range(x1, x2):
            graph[i][j] = 1

for i in range(m):
    for j in range(n):
        if visited[i][j] == False and graph[i][j] == 0:
            bfs(i, j)
            count += 1

print(count)

count_list.sort()

for i in range(len(count_list)):
    print(count_list[i])