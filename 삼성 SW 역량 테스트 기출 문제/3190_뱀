import sys
from collections import deque

def move(di, count):
    for idx, i in enumerate(move_list):
        if count == i[0]:
            if move_list[idx][1] == "L":
                if di == 0:
                    di = 3
                elif di == 1:
                    di = 2
                elif di == 2:
                    di = 0
                elif di == 3:
                    di = 1

            elif move_list[idx][1] == "D":
                if di == 0:
                    di = 2
                elif di == 1:
                    di = 3                    
                elif di == 2:
                    di = 1
                elif di == 3:
                    di = 0

    return di

def bfs(x, y):
    q = deque()
    q.append([x, y, 0, 0]) # x, y, dir, cnt
    visited[x][y] = True
    snake_location = deque()
    snake_location.append([x, y])

    dx = [0, 0, 1, -1]
    dy = [1, -1, 0, 0]

    while q:
        a, b, dir, cnt = q.popleft()

        dir = move(dir, cnt)
        
        x, y = a, b
        nx = dx[dir] + a
        ny = dy[dir] + b
        
        # 1. 이동한 곳이 벽이거나 자기 몸일 경우
        if 0 > nx or n <= nx or 0 > ny or n <= ny or visited[nx][ny] == True:
            return cnt + 1

        # 2. 이동한 곳이 사과일 경우
        if graph[nx][ny] == "A" and visited[nx][ny] == False:
            graph[nx][ny] = "S"
            visited[nx][ny] = True
            snake_location.append([nx, ny])
            q.append([nx, ny, dir, cnt + 1])

        # 3. 이동한 곳이 사과 X 벽 X 일 경우
        elif graph[nx][ny] == "." and visited[nx][ny] == False:
            u, v = snake_location.popleft()
            graph[u][v] = "."
            visited[u][v] = False
            
            graph[nx][ny] = "S"
            visited[nx][ny] = True
            snake_location.append([nx, ny])
            q.append([nx, ny, dir, cnt + 1])

n = int(sys.stdin.readline())
k = int(sys.stdin.readline())

graph = [["."] * n for _ in range(n)]
visited = [[False] * n for _ in range(n)]

apple_location = []

for _ in range(k):
    x, y = map(int, sys.stdin.readline().split())
    graph[x - 1][y - 1] = "A"

l = int(sys.stdin.readline())

move_list = []

for _ in range(l):
    time, direction = sys.stdin.readline().split()
    move_list.append([int(time), direction])

graph[0][0] = "S"

print(bfs(0, 0))