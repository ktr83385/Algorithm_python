import sys

def move(cloud, d, s):
    moved_cloud = []
    for x, y in cloud:
        nx = (x + dx[d] * s) % n
        ny = (y + dy[d] * s) % n
        moved_cloud.append([nx, ny])
    
    return moved_cloud
        
def increase_water(cloud):
    for x, y in cloud:
        board[x][y] += 1
        visited[x][y] = True

def water_copy(before_cloud):
    for x, y in before_cloud:
        for i in [2, 4, 6, 8]:
            nx = x + dx[i]
            ny = y + dy[i]

            if -1 < nx < n and -1 < ny < n and board[nx][ny] >= 1:
                board[x][y] += 1
        
n, m = map(int, sys.stdin.readline().split())

board = []

for _ in range(n):
    board.append(list(map(int, sys.stdin.readline().split())))

cloud = [[n - 1, 0], [n - 1, 1], [n - 2, 0], [n - 2, 1]]

dx = [0, 0, -1, -1, -1, 0, 1, 1, 1]
dy = [0, -1, -1, 0, 1, 1, 1, 0, -1]

for _ in range(m):
    d, s = map(int, sys.stdin.readline().split())

    # 1. 모든 구름이 d 방향으로 s칸 이동
    cloud = move(cloud, d, s)

    # 2. 구름 있는 칸 물의 양 1 증가
    visited = [[False] * n for _ in range(n)]
    increase_water(cloud)

    # 3. 구름이 모두 사라진다
    before_cloud = [item[:] for item in cloud] # 이전 구름 저장
    cloud = []

    # 4. 물의 양 증가한 칸에 물복사 버그 시전
    water_copy(before_cloud)

    # 5. 물의 양 2이상 구름 생성, 물의 양 -2
    for i in range(n):
        for j in range(n):
            if board[i][j] >= 2 and visited[i][j] == False:
                cloud.append([i, j])
                board[i][j] -= 2
    
sum = 0
for i in range(n):
    for j in range(n):
        sum += board[i][j]

print(sum)