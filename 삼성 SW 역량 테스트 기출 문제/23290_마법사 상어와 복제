import sys

def copy_start():
    for i in range(4):
        for j in range(4):
            for dir in fish[i][j][0]:
                fish[i][j][1].append(dir)

def fish_move():
    position = []

    for i in range(4):
        for j in range(4):
            while fish[i][j][0]:
                nd = fish[i][j][0].pop()
                flag = False

                for _ in range(8):
                    nx = i + dx[nd]
                    ny = j + dy[nd]

                    # 이동할 수 있는 경우
                    if -1 < nx < 4 and -1 < ny < 4 and fish_smell[nx][ny] == 0 and not(nx == x and ny == y):
                        position.append((nx, ny, nd))
                        flag = True
                        break

                    # 이동할 수 없는 경우
                    nd = (nd - 1) % 8
                
                if flag == False:
                    position.append((i, j, nd)) # 이동할 수 없다면 이동 X
    
    return position

def select_move_shark(r, c, fish_count, move_count, temp_path):
    global x, y, visited, max_fish_count, path
    if move_count == 3:
        if max_fish_count < fish_count:
            max_fish_count = fish_count
            path = [d for d in temp_path]
        return
    
    for d in range(4):
        nx = r + shark_dx[d]
        ny = c + shark_dy[d]

        if -1 < nx < 4 and -1 < ny < 4:
            if visited[nx][ny] == False:
                visited[nx][ny] = True
                next_fish_count = fish_count + len(fish[nx][ny][0])
                select_move_shark(nx, ny, next_fish_count, move_count + 1, temp_path + [d])
                visited[nx][ny] = False
            else:
                select_move_shark(nx, ny, fish_count, move_count + 1, temp_path + [d])
    
def move_shark():
    global x, y, fish, fish_smell
    for d in path:
        x = x + shark_dx[d]
        y = y + shark_dy[d]
        if fish[x][y][0]:
            fish[x][y][0] = []
            fish_smell[x][y] = 3 # 2가 아닌 이유는 다음번에 바로 -1을 해주기 때문에

def remove_smell():
    global fish_smell
    for i in range(4):
        for j in range(4):
            if fish_smell[i][j] > 0:
                fish_smell[i][j] -= 1

def copy_end():
    global fish
    for i in range(4):
        for j in range(4):
            while fish[i][j][1]:
                fish[i][j][0].append(fish[i][j][1].pop())

dx = [0, -1, -1, -1, 0, 1, 1, 1] #서, 북서, 북, 북동, 동, 남동, 남, 남서
dy = [-1, -1, 0, 1, 1, 1, 0, -1]

shark_dx = [-1, 0, 1, 0] #상좌하우
shark_dy = [0, -1, 0, 1]

m, s = map(int, sys.stdin.readline().split())

fish = [[[[], []] for _ in range(4)] for _ in range(4)]
fish_smell = [[0] * 4 for _ in range(4)]

for _ in range(m):
    x, y, d = map(int, sys.stdin.readline().split())
    fish[x - 1][y - 1][0].append(d - 1)

x, y = map(int, sys.stdin.readline().split())
x -= 1
y -= 1
path = []

visited = [[False] * 4 for _ in range(4)]
max_fish_count = -1

for _ in range(s):
    # 1. 물고기 복제 시전
    copy_start()

    # 2. 물고기 이동
    position = fish_move()
    for r, c, dir in position:
        fish[r][c][0].append(dir)

    path = []
    max_fish_count = -1

    # 3. 상어 이동
    select_move_shark(x, y, 0, 0, [])
    move_shark()

    # 4. 냄새 제거
    remove_smell()

    # 5. 복제 완료
    copy_end()

result = 0
for i in range(4):
    for j in range(4):
        result += len(fish[i][j][0])

print(result)